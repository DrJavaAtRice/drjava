#
# @(#)javac.properties	1.32 04/04/15
#
# Copyright 2003 Sun Microsystems, Inc. All Rights Reserved.
#
# This software is the proprietary information of Sun Microsystems, Inc.
# Use is subject to license terms.
#
# Use and Distribution is subject to the Java Research License available
# at <http://wwws.sun.com/software/communitysource/jrl.html>.
#

## standard options

javac.opt.g=\
    Generate all debugging info
javac.opt.g.none=\
    Generate no debugging info
javac.opt.g.lines.vars.source=\
    Generate only some debugging info
javac.opt.nowarn=\
    Generate no warnings
javac.opt.verbose=\
    Output messages about what the compiler is doing
javac.opt.deprecation=\
    Output source locations where deprecated APIs are used
javac.opt.classpath=\
    Specify where to find user class files
javac.opt.sourcepath=\
    Specify where to find input source files
javac.opt.bootclasspath=\
    Override location of bootstrap class files
javac.opt.Xbootclasspath.p=\
    Prepend to the bootstrap class path
javac.opt.Xbootclasspath.a=\
    Append to the bootstrap class path
javac.opt.endorseddirs=\
    Override location of endorsed standards path
javac.opt.extdirs=\
    Override location of installed extensions
javac.opt.d=\
    Specify where to place generated class files
javac.opt.J=\
    Pass <flag> directly to the runtime system
javac.opt.encoding=\
    Specify character encoding used by source files
javac.opt.target=\
    Generate class files for specific VM version
javac.opt.source=\
    Provide source compatibility with specified release
javac.opt.arg.flag=\
    <flag>
javac.opt.arg.path=\
    <path>
javac.opt.arg.dirs=\
    <dirs>
javac.opt.arg.directory=\
    <directory>
javac.opt.arg.encoding=\
    <encoding>
javac.opt.arg.release=\
    <release>
javac.opt.arg.number=\
    <number>
## extended options

javac.opt.maxerrs=\
    Set the maximum number of errors to print
javac.opt.maxwarns=\
    Set the maximum number of warnings to print
javac.opt.nogj=\
    Don't accept generics in the language
javac.opt.moreinfo=\
    Print extended information for type variables
javac.opt.printflat=\
    Print abstract syntax tree after inner class conversion
javac.opt.printsearch=\
    Print information where classfiles are searched
javac.opt.prompt=\
    Stop after each error
javac.opt.retrofit=\
    Retrofit existing classfiles with generic types
javac.opt.s=\
    Emit java sources instead of classfiles
javac.opt.scramble=\
    Scramble private identifiers in bytecode
javac.opt.scrambleall=\
    Scramble package visible identifiers in bytecode
javac.opt.version=\
    Version information
javac.opt.arg.pathname=\
    <pathname>
javac.opt.arg.file=\
    <filename>
javac.opt.Xlint=\
    Enable recommended warnings
javac.opt.Xlint.suboptlist=\
    Enable or disable specific warnings
javac.opt.Xstdout=\
    Redirect standard output
javac.opt.X=\
    Print a synopsis of nonstandard options
javac.opt.help=\
    Print a synopsis of standard options

## errors

javac.err.invalid.arg=\
    invalid argument: {0}
javac.err.invalid.flag=\
    invalid flag: {0}
javac.err.invalid.target=\
    invalid target release: {0}
javac.err.no.source.files=\
    no source files
javac.err.req.arg=\
    {0} requires argument
javac.err.invalid.source=\
    invalid source release: {0}
javac.err.error.writing.file=\
    error writing {0}; {1}
javac.warn.source.target.conflict=\
    source release {0} requires target release {1}
javac.warn.target.default.source.conflict=\
    target release {0} conflicts with default source release {1}
javac.err.file.not.found=\
    file not found: {0}
## messages

javac.msg.usage.header=\
Usage: {0} <options> <source files>\n\
where possible options include:
	
javac.msg.usage.nonstandard.footer=\
These options are non-standard and subject to change without notice.
	
javac.msg.bug=\
An exception has occurred in the compiler ({0}). \
Please file a bug at the Java Developer Connection (http://java.sun.com/webapps/bugreport)  \
after checking the Bug Parade for duplicates. \
Include your program and the following diagnostic in your report.  Thank you.

javac.msg.io=\
\n\nAn input/output error occurred.\n\
Consult the following stack trace for details.\n

javac.msg.resource=\
\n\nThe system is out of resources.\n\
Consult the following stack trace for details.\n
