// Language Level Converter line number map: dj*->java. Entries: 7
//     1->3         2->4         3->5         4->38        5->39        6->40        7->41   
class SuperClassBelow extends LowerClass {
  

  /** This method is automatically generated by the Language Level Converter. */
  public SuperClassBelow(int super_field) {
    super(super_field);
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        field() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      SuperClassBelow cast = ((SuperClassBelow) o);
      return (field() == cast.field());
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        field();
  }
}

class LowerClass {
  private final int field;

  /** This method is automatically generated by the Language Level Converter. */
  public LowerClass(int field) {
    super();
    this.field = field;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int field() {
    return field;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        field() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      LowerClass cast = ((LowerClass) o);
      return (field() == cast.field());
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        field();
  }
}
