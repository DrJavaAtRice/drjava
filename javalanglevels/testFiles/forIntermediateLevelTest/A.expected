// Language Level Converter line number map: dj*->java. Entries: 1
//     1->3    
class A extends Object {private final char c;
  /** This method is automatically generated by the Language Level Converter. */
  public A(char c) {
    super();
    this.c = c;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public char c() {
    return c;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        c() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      A cast = ((A) o);
      return (c() == cast.c());
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        c();
  }
} /**This ends class A.  Now class B is starting*/ class B extends A {
                                                                                    /** This method is automatically generated by the Language Level Converter. */
                                                                                    public B(char super_c) {
                                                                                      super(super_c);
                                                                                    }

                                                                                    /** This method is automatically generated by the Language Level Converter. */
                                                                                    public java.lang.String toString() {
                                                                                      return getClass().getName() + "(" + 
                                                                                          c() + 
                                                                                          ")";
                                                                                    }

                                                                                    /** This method is automatically generated by the Language Level Converter. */
                                                                                    public boolean equals(java.lang.Object o) {
                                                                                      if (this == o) {
                                                                                        return true;
                                                                                      }
                                                                                      else if ((o == null) || (! o.getClass().equals(getClass()))) {
                                                                                        return false;
                                                                                      }
                                                                                      else {
                                                                                        B cast = ((B) o);
                                                                                        return (c() == cast.c());
                                                                                      }
                                                                                    }

                                                                                    /** This method is automatically generated by the Language Level Converter. */
                                                                                    public int hashCode() {
                                                                                      return getClass().hashCode() ^ 
                                                                                          c();
                                                                                    }
                                                                                  }//isn't the end of a line fun?
