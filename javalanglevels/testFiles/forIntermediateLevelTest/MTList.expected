// Language Level Converter line number map: dj*->java. Entries: 45
//     1->8         2->9         3->10        4->11        5->12        6->13        7->14        8->15   
//     9->16       10->17       11->18       12->19       13->20       14->21       15->22       16->23   
//    17->24       18->25       19->26       20->27       21->28       22->29       23->30       24->31   
//    25->32       26->33       27->34       28->35       29->36       30->37       31->38       32->39   
//    33->40       34->41       35->42       36->43       37->44       38->45       39->46       40->47   
//    41->48       42->49       43->50       44->51       45->52   
 // Represents a non-empty list

public class MTList implements IList2 {

  public final static MTList Singleton = new MTList();

  
  private MTList() {
    
    }

  public int sum(){

    return 0;

  }

  public String toString2() {

  return "0";  

  }

  public String toStringHelp() {

    return ")"; //empty string
  }

  public int getlength(){

    return 0; 

  

  }

  

  public int getlengthHelp(final int acc) {

        return acc;                       

  }


  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      MTList cast = ((MTList) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
}
