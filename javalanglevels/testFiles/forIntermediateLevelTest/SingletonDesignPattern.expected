// Language Level Converter line number map: dj*->java. Entries: 12
//     1->4         2->5         3->6         4->7         5->8         6->9         7->35        8->36   
//     9->37       10->38       11->39       12->40   
class SingletonDesignPattern {
  public final static SingletonDesignPattern sdp = new SingletonDesignPattern();
  
  private SingletonDesignPattern() {
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      SingletonDesignPattern cast = ((SingletonDesignPattern) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
}

class useSingleton {
  public SingletonDesignPattern myMethod() {
    return SingletonDesignPattern.sdp;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public useSingleton() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      useSingleton cast = ((useSingleton) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
}
