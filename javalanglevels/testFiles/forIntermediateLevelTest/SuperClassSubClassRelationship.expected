// Language Level Converter line number map: dj*->java. Entries: 7
//     1->3         2->4         3->5         4->36        5->37        6->38        7->39   
class SuperClass {
  

  /** This method is automatically generated by the Language Level Converter. */
  public SuperClass() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      SuperClass cast = ((SuperClass) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
}

class SubClass extends SuperClass {
 private final SuperClass s; 

  /** This method is automatically generated by the Language Level Converter. */
  public SubClass(SuperClass s) {
    super();
    this.s = s;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public SuperClass s() {
    return s;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        s() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      SubClass cast = ((SubClass) o);
      return (s() != null && s().equals(cast.s()));
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        (s() == null ? 0 : s().hashCode());
  }
}
