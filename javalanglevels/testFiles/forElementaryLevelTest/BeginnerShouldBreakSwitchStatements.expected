// Language Level Converter line number map: dj*->java. Entries: 17
//     1->5         2->6         3->7         4->8         5->9         6->10        7->11        8->12   
//     9->13       10->14       11->15       12->16       13->17       14->18       15->19       16->20   
//    17->21   
/*!DrJava Beginner Level*/

class BeginnerShouldBreakSwitchStatements extends Object {
  private final int i = 10;
  
  public int switchMethod() {
    switch (i) {
      case 1:
        break;
      case 2:
        break;
      default:
        break;
    }
    return i;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public BeginnerShouldBreakSwitchStatements() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int i() {
    return i;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        i() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      BeginnerShouldBreakSwitchStatements cast = ((BeginnerShouldBreakSwitchStatements) o);
      return (i() == cast.i());
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        i();
  }
}
