// Language Level Converter line number map: dj*->java. Entries: 11
//     1->4         2->5         3->6         4->7         5->8         6->9         7->10        8->11   
//     9->12       10->13       11->14   
package forElementaryLevelTest;

class BeginnerShouldBreakPackageStmt {
  private final int i;
  private final String love;
  private final char java;
  
  public int thisMethodShouldWork() {
    return i/((int)java);
  }

  /** This method is automatically generated by the Language Level Converter. */
  public BeginnerShouldBreakPackageStmt(int i, java.lang.String love, char java) {
    super();
    this.i = i;
    this.love = love;
    this.java = java;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int i() {
    return i;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String love() {
    return love;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public char java() {
    return java;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        i() + ", " + 
        love() + ", " + 
        java() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      BeginnerShouldBreakPackageStmt cast = ((BeginnerShouldBreakPackageStmt) o);
      return (i() == cast.i()) && 
          (love() != null && love().equals(cast.love())) && 
          (java() == cast.java());
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        i() ^ 
        (love() == null ? 0 : love().hashCode()) ^ 
        java();
  }
}
