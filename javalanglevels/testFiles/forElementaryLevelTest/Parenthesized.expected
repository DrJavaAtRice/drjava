// Language Level Converter line number map: dj*->java. Entries: 13
//     1->4         2->5         3->6         4->7         5->8         6->9         7->10        8->11   
//     9->12       10->13       11->14       12->15       13->16   
class Parenthesized
{
  private final String name;
  
  public String toString2()
  {
    return "This Entry is [ " + name + " ] ";
  }
  public boolean match(final String input)
  {
    return (name.equals(input));
  }

  /** This method is automatically generated by the Language Level Converter. */
  public Parenthesized(java.lang.String name) {
    super();
    this.name = name;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String name() {
    return name;
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        name() + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      Parenthesized cast = ((Parenthesized) o);
      return (name() != null && name().equals(cast.name()));
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode() ^ 
        (name() == null ? 0 : name().hashCode());
  }
}
